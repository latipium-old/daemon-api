<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!-- Default property values -->
    <PropertyGroup>
        <Platform>AnyCPU</Platform>
        <AssemblyName>$(LatipiumNamespace)</AssemblyName>
        <ReleaseVersion>1.0</ReleaseVersion>
        <TargetFrameworkProfile />
        <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
        
        <OutputPath>bin/$(Configuration)</OutputPath>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <ConsolePause>false</ConsolePause>
    </PropertyGroup>
    
    <!-- Properties dependent on the configuration -->
    <PropertyGroup Condition="'$(Configuration)' == ''">
        <Configuration>Debug</Configuration>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
        <DefineConstants>DEBUG;BETA;</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)' == 'Prerelease'">
        <DefineConstants>RELEASE;BETA;</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <DefineConstants>RELEASE;REAL_RELEASE;</DefineConstants>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)' == 'Debug' Or '$(Configuration)' == 'Prerelease'">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)' == 'Prerelease' Or '$(Configuration)' == 'Release'">
        <Optimize>true</Optimize>
        <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
        <DocumentationFile>bin/$(Configuration)/documentation.xml</DocumentationFile>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    </PropertyGroup>
    
    <!-- Properties dependent on the target -->
    <PropertyGroup Condition="'$(LatipiumTarget)' == 'Executable'">
        <OutputType>Exe</OutputType>
    </PropertyGroup>
    <PropertyGroup Condition="'$(LatipiumTarget)' != 'Executable'">
        <OutputType>Library</OutputType>
    </PropertyGroup>
    
    <!-- Properties dependent on signing -->
    <PropertyGroup Condition="'$(LatipiumSigned)' == 'true'">
        <SignAssembly>true</SignAssembly>
        <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    </PropertyGroup>
    
    <!-- Custom targets -->
    <UsingTask TaskName="Com.GitHub.ZachDeibert.CommandWrapper.CommandTask" AssemblyFile="$(SolutionDir)/packages/CommandWrapper.2.1/bin/command-wrapper.exe" />
    <Target Name="CalculateVersion" BeforeTargets="CoreCompile">
        <CommandTask Command="WRAPPER_NUGET=true -- '$(SolutionDir)/packages/Com.Latipium.DevTools.1.2.2.2/bin/Com.Latipium.DevTools.exe' version -C '$(ProjectDir)' AssemblyVersion.cs" WorkingDirectory="$(SolutionDir)/packages/Com.Latipium.DevTools.1.2.2.2/" />
    </Target>
    <Target Name="CreatePackage" DependsOnTargets="Build" Condition=" '$(Configuration)' == 'Prerelease' Or '$(Configuration)' == 'Release' ">
        <CommandTask Command="WRAPPER_NUGET=true -- '$(SolutionDir)/packages/Com.Latipium.DevTools.1.2.2.2/bin/Com.Latipium.DevTools.exe' package -C '$(ProjectDir)' -s app.nuspec -t $(Configuration)" WorkingDirectory="$(SolutionDir)/packages/Com.Latipium.DevTools.1.2.2.2/" />
    </Target>
    <Target Name="PublishPackage" DependsOnTargets="CreatePackage" Condition=" '$(Configuration)' == 'Prerelease' Or '$(Configuration)' == 'Release' ">
        <CommandTask Command="WRAPPER_NUGET=true WRAPPER_ASK=5 -- '$(SolutionDir)/packages/Com.Latipium.DevTools.1.2.2.2/bin/Com.Latipium.DevTools.exe' publish -C '$(ProjectDir)' -d -k 'Please enter your NuGet.org API key:'" WorkingDirectory="$(SolutionDir)/packages/Com.Latipium.DevTools.1.2.2.2/" />
    </Target>
    <Target Name="CIBuild" DependsOnTargets="CreatePackage" Condition=" '$(Configuration)' == 'Prerelease' Or '$(Configuration)' == 'Release' ">
        <CommandTask Command="WRAPPER_NUGET=true -- '$(SolutionDir)/packages/Com.Latipium.DevTools.1.2.2.2/bin/Com.Latipium.DevTools.exe' publish -C '$(ProjectDir)' -d" WorkingDirectory="$(SolutionDir)/packages/Com.Latipium.DevTools.1.2.2.2/" />
    </Target>
    
    <!-- Include the C# project stuff -->
    <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
</Project>
